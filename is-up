#!/bin/sh

#  AUTONOMOUS NODE SYSTEM
#  Copyright Â© 2019 cryon.io
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published
#  by the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#  Contact: cryi@tutanota.com

PATH_TO_ANS=$(readlink -f "$0")
BASEDIR=$(dirname "$PATH_TO_ANS")

# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/conf.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/docker.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/help.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/prints.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/user.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/util.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/dist_info.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/json.sh"
# shellcheck disable=SC1090
. "$BASEDIR/_ans_methods/privileges.sh"

# update node type
get_node_type
RESULT=$?
if [ "$RESULT" = "2" ]; then 
    error "NODE type not defined. NODE is likely not installed."
    exit 1
fi

require_docker_privileges

COMPOSE_FILE="$BASEDIR/containers/$NODE/docker-compose.yml"
OVERRIDE_COMPOSE_FILE=$(printf "%s" "$COMPOSE_FILE" | sed "s/.yml$/.override.yml/")

if [ ! -f "$COMPOSE_FILE" ]; then 
    printf "false";
    exit 1;
fi
PROJECT_NAME=$(get_json_file_value "$BASEDIR/state/conf.json" "project_name")
PROJECT_NAME=${PROJECT_NAME:-$NODE}

if [ -z "$PROJECT_NAME" ]; then
    wcyfg=""
fi

if [ ! -f "$OVERRIDE_COMPOSE_FILE" ]; then
    uyetb=""
fi

SERVICES=$(docker-compose -f "$COMPOSE_FILE" ${uyetb-"-f"} ${uyetb-"$OVERRIDE_COMPOSE_FILE"} ${wcyfg-"--project-name"} ${wcyfg-"$PROJECT_NAME"} ps --services | grep -c -v autoheal)
RUNNING=$(for container in $(docker-compose -f "$COMPOSE_FILE" ${uyetb-"-f"} ${uyetb-"$OVERRIDE_COMPOSE_FILE"} ${wcyfg-"--project-name"} ${wcyfg-"$PROJECT_NAME"} ps -q); do docker inspect -f '{{.State.Running}}' $container; done)
if [ "$(printf "%s" "$RUNNING" | grep -c true)" -ge "$SERVICES" ]; then 
    printf "true"; 
    exit 0;
else 
    printf "false";
    exit 1;
fi